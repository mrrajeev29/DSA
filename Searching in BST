#include <iostream>
using namespace std;
struct node
{
    int data;
    struct node *left;
    struct node *right;
};
void Insert(struct node *root,int data)
{
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    ptr->left=NULL;
    ptr->right=NULL;
    ptr->data=data;
    struct node *prev;
    while(root!=NULL)
    {
        prev=root;
        if(root->data==data)
        {
            return;
        }
        else if(root->data>data)
        {
            root=root->left;
        }
        else
        {
            root=root->right;
        }
    }
    if(prev->data>data)
    {
        prev->left=ptr;
    }
    else
    {
        prev->right=ptr;
    }
}
struct node *Search(struct node *root,int data)
{
    while(root!=NULL)
    {
        if(root->data==data)
        {
            return root;
        }
        else if(root->data>data)
        {
            root=root->left;
        }
        else
        {
            root=root->right;
        }
    }
    return NULL;
};
void Inorder(struct node* root)
{
    if(root!=NULL)
    {
        Inorder(root->left);
        cout<<root->data<<" ";
        Inorder(root->right);
    }
}
int main()
{
    struct node *root=(struct node*)malloc(sizeof(struct node));
    root->data=5;
    root->left=NULL;
    root->right=NULL;
    Insert(root,4);
    Insert(root,2);
    Insert(root,21);
    Inorder(root);
    if( Search(root,2)!=NULL)
    {
        cout<<"Element Found\n";
    }
    else
    {
        cout<<"Element Not found\n";
    }
    return 0;
}
