bool isLeaf(TreeNode* node) {
    return (node->left == nullptr && node->right == nullptr);
}
void printPath(vector<int> const &path)
{
    for (int i = path.size() - 1; i > 0; i--) {
        cout<<path.at(i);
    }
    cout<<path.at(0))<<endl;
}
void printLeafToRootPaths(TreeNode* node, vector<int> &path)
{
    if (node == nullptr) {
        return;
    }
    path.push_back(node->val);
    if (isLeaf(node)) {
        printPath(path);
    }
    printLeafToRootPaths(node->left, path);
    printLeafToRootPaths(node->right, path);
    path.pop_back();
}
 void printLeafToRootPaths(TreeNode* node)
{
    vector<int> path;
    printLeafToRootPaths(node, path);
}


int main()
{
     printLeafToRootPaths(root);
}
