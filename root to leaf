#include <iostream>
#include <vector>
using namespace std;
struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int v) : val(v), left(nullptr), right(nullptr) {}
};

void printPaths(TreeNode* root,vector<int>& path) {
    if(root!=NULL)
    {
        path.push_back(root->val);
        if (root->left == NULL && root->right == NULL) 
        {
            for (int val : path) 
            {
                cout << val << " ";
            }
            cout <<endl;
        }
        else 
        {
            printPaths(root->left, path);
            printPaths(root->right, path);
        }
        path.pop_back();
    }
}
int main() {
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    root->right->right = new TreeNode(7);

    std::cout << "Paths from root to leaf nodes:" << std::endl;
    std::vector<int> path;
    printPaths(root, path);
    // Clean up memory (optional)
    delete root->right->right;
    delete root->right->left;
    delete root->right;
    delete root->left->right;
    delete root->left->left;
    delete root->left;
    delete root;

    return 0;
}
