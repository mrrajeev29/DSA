/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int height(TreeNode * root)
{
    if(root==NULL){return 0;}
    return 1+max(height(root->left),height(root->right));
}
int diameter(TreeNode* root)
{
    if(root==NULL)
    {
        return 0;
    }
    int td=height(root->left)+height(root->right);
    int lh=diameter(root->left);
    int rh=diameter(root->right);
    return max(td,max(lh,rh));
}
    int diameterOfBinaryTree(TreeNode* root) {
        return diameter(root);
    }
};
